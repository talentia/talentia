# Default configuration in Play
application.secret=">Es0ixX9Wk>5QgU7P0R7NrpjxL5VBlbIFKwSuT4qp_6q5ChD8Q<1O>N@FtA/8Qa1"
application.langs="en"

logger.root=ERROR
logger.play=INFO
logger.application=DEBUG

# Play2handlebars configuration
play2handlebars {
  root = "/app/views"
  enableCache = false
  useClassLoaderTemplate = false
//  helpers = [
//    "helpers.HelperSourceJa"
//    "helpers.HelperSourceEn"
//  ]
}

# ****************************************** #
# *** ReactiveMongo Plugin configuration *** #
# ****************************************** #

# Simple configuration (by URI)
# Here we use the simplest URI (connect to `localhost` using `databasename` as a database.)
mongodb.uri = "mongodb://localhost/talentia"

# URI + Authentication
# mongodb.uri = "mongodb://jack:jackpwd@localhost:27017/toto"

# URI + Authentication + Replica Set
# This one connects to the following nodes (in the same replica set):
#   - host1 (using the default port, 27017)
#   - host2 (using the custom port 27018)
#   - 10.0.27.8 (using the custom port 27018)
# It uses the database `toto` with the credentials `jack` as a user and `jackpwd` as its password.
# mongodb.uri = "mongodb://jack:jackpwd@host1,host2:27018,10.0.27.8:27018/toto"

# Legacy configuration (prefer URI)
# mongodb.servers = ["localhost:27017"]
# mongodb.db = "databasename"

# If you want to turn on logging for ReactiveMongo, uncomment and customize this line
# logger.reactivemongo=DEBUG"


# ****************************************** #
# *** Play WS Configuration              *** #
# ****************************************** #
# play.api.libs.ws.Defaults/DefaultWSConfigParser etc.
ws {
//  timeout {
//    connection = 120000L
//    idle = 120000L
//    request = 120000L
//  }
//  followRedirects = true
//  useProxyProperties = true
//  compressionEnabled = false
//
//  useragent = "hoge"
//  acceptAnyCertificate = true
//  ssl {
//    //... lots of configuration
//  }
}

# ****************************************** #
# Qiita
# ****************************************** #
api {
  qiita {
    root = "http://localhost:8000"
//    root = "https://qiita.com/api/v1"
  }
}